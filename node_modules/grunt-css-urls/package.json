{
  "_args": [
    [
      {
        "raw": "grunt-css-urls",
        "scope": null,
        "escapedName": "grunt-css-urls",
        "name": "grunt-css-urls",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/formation/workspace/projet_betclic/betclic"
    ]
  ],
  "_from": "grunt-css-urls@latest",
  "_id": "grunt-css-urls@0.2.0",
  "_inCache": true,
  "_location": "/grunt-css-urls",
  "_npmUser": {
    "name": "jpgarcia",
    "email": "juanpablogarcia@gmail.com"
  },
  "_npmVersion": "1.2.19",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-css-urls",
    "scope": null,
    "escapedName": "grunt-css-urls",
    "name": "grunt-css-urls",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-css-urls/-/grunt-css-urls-0.2.0.tgz",
  "_shasum": "68a73f18d6f7ea11d8813ae2b2f36b652ff6f394",
  "_shrinkwrap": null,
  "_spec": "grunt-css-urls",
  "_where": "/home/formation/workspace/projet_betclic/betclic",
  "author": {
    "name": "Juan Pablo Garcia",
    "url": "http://github.com/jpgarcia/"
  },
  "bugs": {
    "url": "https://github.com/Ideame/grunt-css-urls/issues"
  },
  "dependencies": {},
  "description": "Grunt task to make css urls relative to a main css file with @import rules",
  "devDependencies": {
    "grunt": "~0.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "68a73f18d6f7ea11d8813ae2b2f36b652ff6f394",
    "tarball": "https://registry.npmjs.org/grunt-css-urls/-/grunt-css-urls-0.2.0.tgz"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "homepage": "https://github.com/Ideame/grunt-css-urls",
  "keywords": [
    "grunt",
    "css",
    "bundling"
  ],
  "maintainers": [
    {
      "name": "jpgarcia",
      "email": "juanpablogarcia@gmail.com"
    }
  ],
  "name": "grunt-css-urls",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "readme": "grunt-css-urls\n==============\n\n> Grunt task to make css urls relative to a main css file with @import rules.\n\nGetting Started\n---------------\n\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-css-urls`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-css-urls');\n```\n\nfinally define the task indicating where the css with the **@import** rules is located:\n\n```javascript\ngrunt.initConfig({\n    cssUrls: {\n        /* src *(required)*: The file location of the css with the @import rules. */\n        src:  \"public/site.css\"\n    }\n});\n```\nRead the scenario described below to better understand how this task works combined together with the [grunt-css][grunt_css] task.\n\nThe Scenario\n------------\n\nLets imagine the following folder structure and css contents:\n\n```bash\npublic\n├── css\n│   └─── common.css\n│   └─── views\n│   |    └── products\n│   |         └── show.css\n│   |         └── img\n│   |              └── product-icon.png\n├── img\n|   └── logo.png\n|   └── arrow.png\n├── vendor\n│   └─── jquery-plugin\n│        └── css\n│             └── jquery-plugin.css\n│             └── images\n│                  └── plugin.png\n```\n\n#### common.css\n```css\nh1.logo { url('../img/logo.png') }\n```\n\n#### show.css\n```css\n.product-icon { url('img/product-icon.png') }\n.product-table .arrow { url('../../../img/arrow.png') }\n```\n\n#### jquery-plugin.css\n```css\n.jquery-plugin { url('images/jquery-plugin.png') }\n```\n\nand the html file including the css inclussions:\n\n```html\n<link media=\"screen\" rel=\"stylesheet\" type=\"text/css\" href=\"/public/css/common.css\">\n<link media=\"screen\" rel=\"stylesheet\" type=\"text/css\" href=\"/public/css/views/productos/show.css\">\n<link media=\"screen\" rel=\"stylesheet\" type=\"text/css\" href=\"/public/vendor/jquery-plugin/css/jquery-plugin.css\">\n```\n\n## The Bundling Issue\n\nIf we want to bundle all the thing into a sinle file e.g.: **/public/site.css** including the three css files described\nabove, the images' references will not work as they will be now relative the new **/public** folder.\n\n## The Solution\n\nTo solve the bundling issue we'll create a **site.css** file inside the **public** folder at the same level\nof **css**, **img** and **vendor** folders taking advantage of the **@import** css rules:\n\n```css\n@import './public/css/common.css';\n@import './public/css/views/productos/show.css';\n@import './public/vendor/jquery-plugin/css/jquery-plugin.css';\n```\n\nand reference it in the html:\n\n```html\n<link media=\"screen\" rel=\"stylesheet\" type=\"text/css\" href=\"/public/site.css\">\n```\n\nBy doing this we'll have a reference starting point to calcule the relative urls for the **url** references\ninside the **css** files and replace those with the corresponding location.\n\nAnd here is where the **grunt-css-url** task will do the magic. The folowing sample uses also the [grunt-css][grunt_css]\ntask to minify the css with the precedence defined in the **site.css** file:\n\n```javascript\nvar path = require('path');\n\nmodule.exports = function(grunt) {\n    grunt.initConfig({\n        cssUrls: {\n            src:  \"public/site.css\"\n        },\n        cssmin: {\n            all: {\n                dest: 'public/site.min.css',\n                src: function () {\n                    var content = grunt.file.read('public/site.css').toString();\n                    var files = [];\n\n                    content.replace(/@import\\s+'([^']+)/gim, function(match, location, a) {\n                        files.push(path.resolve('public/' + location));\n                    });\n\n                    return files;\n                }()\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-css');\n    grunt.loadNpmTasks('grunt-css-urls');\n\n    grunt.registerTask('release', [ 'cssUrls', 'cssmin' ]);\n};\n```\nBased on the scenario described above, the url references will end up like this:\n\n```css\nh1.logo { url('./img/logo.png') }\n.product-icon { url('./css/views/products/img/product-icon.png') }\n.product-table .arrow { url('../../../img/arrow.png') }\n.jquery-plugin { url('./vendor/jquery-plugin/css/images/jquery-plugin.png') }\n```\n\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n[grunt_css]: https://github.com/jzaefferer/grunt-css\n\nLicense\n-------\n\nCopyright (c) 2012 Juan Pablo Garcia & Ideame Dev Team\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Ideame/grunt-css-urls.git"
  },
  "version": "0.2.0"
}
